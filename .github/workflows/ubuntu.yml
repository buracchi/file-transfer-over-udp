name: Ubuntu

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: actions/cache@v2.1.4
      id: vcpkg-cache
      with:
        path: '**/vcpkg'
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/.dependencies') }}
        restore-keys: |
            ${{ runner.os }}-vcpkg-
            ${{ runner.os }}-

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCODE_COVERAGE=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE

    - name: Codecov
      uses: codecov/codecov-action@v1.2.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        gcov_root_dir: ${{runner.workspace}}/build
        directory: ${{runner.workspace}}/build
        verbose: true
        fail_ci_if_error: true
